{"ast":null,"code":"var _jsxFileName = \"/Users/Madara/Desktop/IST440W/Finance-Tracker/src/components/Home/Chart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Bar, Doughnut } from \"react-chartjs-2\";\nimport { Chart as ChartJS } from \"chart.js/auto\";\nimport { AppContext } from \"../../Context/AppContext\";\nimport { H1 } from \"../../styles/twStyles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chart(_ref) {\n  _s();\n  let {\n    type,\n    title,\n    width,\n    labels\n  } = _ref;\n  const {\n    expenses\n  } = useContext(AppContext);\n  const CHART_COLORS = [\"rgba(255, 99, 132, 0.4)\", \"rgba(5, 76, 205, 0.4)\", \"rgba(255, 206, 86, 0.4)\", \"rgba(17, 192, 192, 0.4)\", \"rgba(153, 102, 255, 0.4)\", \"rgba(90, 125, 64, 0.4)\", \"rgba(0, 122, 64, 0.4)\", \"rgba(250, 255, 64, 0.4)\"];\n  // data analytics\n  const data = expenses.map(expense => ({\n    category: expense.category,\n    spends: expenses.filter(exp => exp.category === expense.category).map(exps => exps.cost).reduce((total, cost) => total += Number(cost), 0)\n  }));\n  function getTotalForMonths() {\n    const data = expenses.map(expense => ({\n      month: new Date(expense.date).getMonth() + 1,\n      spends: Number(expense.cost)\n    }));\n    const eachMonthTotal = data.map(elem => ({\n      month: elem.month,\n      total: data.filter(exp => exp.month === elem.month).map(exps => Number(exps.spends)).reduce((total, cost) => total += Number(cost), 0)\n    }));\n    return getUniqueList(eachMonthTotal, \"month\");\n  }\n  function getAllDataMonths() {\n    let data = getTotalForMonths();\n    let labelsMonths = [];\n    let TotalForMonths = [];\n    let i = 1;\n    while (i <= 12) {\n      let j = data.filter(el => el.month === i);\n      if (j.length > 0) {\n        labelsMonths.push(getMonthName(j[0].month));\n        TotalForMonths.push(Number(j[0].total));\n      } else {\n        labelsMonths.push(getMonthName(i));\n        TotalForMonths.push(0);\n      }\n      i++;\n    }\n    return [labelsMonths, TotalForMonths];\n  }\n  const [dataChart, setDataChart] = useState({\n    labels: labels ? getAllDataMonths()[0] : getDataBy(getUniqueList(data, \"category\"), \"category\"),\n    datasets: [{\n      label: \"Most spending categories\",\n      data: labels ? getAllDataMonths()[1] : getDataBy(getUniqueList(data, \"spends\"), \"spends\"),\n      backgroundColor: CHART_COLORS\n    }]\n  });\n  useEffect(() => {\n    setDataChart({\n      labels: labels ? getAllDataMonths()[0] : getDataBy(getUniqueList(data, \"category\"), \"category\"),\n      datasets: [{\n        label: \"Expenses of each month\",\n        data: labels ? getAllDataMonths()[1] : getDataBy(getUniqueList(data, \"spends\"), \"spends\"),\n        backgroundColor: CHART_COLORS\n      }]\n    });\n  }, [expenses]);\n  function getDataBy(arr, key) {\n    return arr.map(item => item[key]);\n  }\n  function getUniqueList(arr, key) {\n    return [...new Map(arr.map(item => [item[key], item])).values()];\n  }\n  function getMonthName(monthNumber) {\n    const date = new Date();\n    date.setMonth(monthNumber - 1);\n    return date.toLocaleString(\"en-US\", {\n      month: \"short\"\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart flex-1\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: H1 + \" mb-3\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${!labels && \"canvasChart\"} mx-auto`,\n      style: {\n        width: width\n      },\n      children: type === \"Doughnut\" ? /*#__PURE__*/_jsxDEV(Doughnut, {\n        data: dataChart,\n        options: {\n          responsive: true,\n          maintainAspectRatio: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(Bar, {\n        data: dataChart,\n        options: {\n          responsive: true,\n          maintainAspectRatio: true,\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 3\n  }, this);\n}\n_s(Chart, \"U6AMcdMuUuBgncG3AGhtzaAFq0c=\");\n_c = Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Bar","Doughnut","Chart","ChartJS","AppContext","H1","type","title","width","labels","expenses","CHART_COLORS","data","map","expense","category","spends","filter","exp","exps","cost","reduce","total","Number","getTotalForMonths","month","Date","date","getMonth","eachMonthTotal","elem","getUniqueList","getAllDataMonths","labelsMonths","TotalForMonths","i","j","el","length","push","getMonthName","dataChart","setDataChart","getDataBy","datasets","label","backgroundColor","arr","key","item","Map","values","monthNumber","setMonth","toLocaleString","responsive","maintainAspectRatio","scales","y","beginAtZero"],"sources":["/Users/Madara/Desktop/IST440W/Finance-Tracker/src/components/Home/Chart.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { Bar, Doughnut } from \"react-chartjs-2\";\nimport { Chart as ChartJS } from \"chart.js/auto\";\nimport { AppContext } from \"../../Context/AppContext\";\nimport { H1 } from \"../../styles/twStyles\";\n\nexport default function Chart({ type, title, width, labels }) {\n\tconst { expenses } = useContext(AppContext);\n\tconst CHART_COLORS = [\n\t\t\"rgba(255, 99, 132, 0.4)\",\n\t\t\"rgba(5, 76, 205, 0.4)\",\n\t\t\"rgba(255, 206, 86, 0.4)\",\n\t\t\"rgba(17, 192, 192, 0.4)\",\n\t\t\"rgba(153, 102, 255, 0.4)\",\n\t\t\"rgba(90, 125, 64, 0.4)\",\n\t\t\"rgba(0, 122, 64, 0.4)\",\n\t\t\"rgba(250, 255, 64, 0.4)\",\n\t];\n\t// data analytics\n\tconst data = expenses.map((expense) => ({\n\t\tcategory: expense.category,\n\t\tspends: expenses\n\t\t\t.filter((exp) => exp.category === expense.category)\n\t\t\t.map((exps) => exps.cost)\n\t\t\t.reduce((total, cost) => (total += Number(cost)), 0),\n\t}));\n\tfunction getTotalForMonths() {\n\t\tconst data = expenses.map((expense) => ({\n\t\t\tmonth: new Date(expense.date).getMonth() + 1,\n\t\t\tspends: Number(expense.cost),\n\t\t}));\n\n\t\tconst eachMonthTotal = data.map((elem) => ({\n\t\t\tmonth: elem.month,\n\t\t\ttotal: data\n\t\t\t\t.filter((exp) => exp.month === elem.month)\n\t\t\t\t.map((exps) => Number(exps.spends))\n\t\t\t\t.reduce((total, cost) => (total += Number(cost)), 0),\n\t\t}));\n\t\treturn getUniqueList(eachMonthTotal, \"month\");\n\t}\n\tfunction getAllDataMonths() {\n\t\tlet data = getTotalForMonths();\n\t\tlet labelsMonths = [];\n\t\tlet TotalForMonths = [];\n\t\tlet i = 1;\n\t\twhile (i <= 12) {\n\t\t\tlet j = data.filter((el) => el.month === i);\n\t\t\tif (j.length > 0) {\n\t\t\t\tlabelsMonths.push(getMonthName(j[0].month));\n\t\t\t\tTotalForMonths.push(Number(j[0].total));\n\t\t\t} else {\n\t\t\t\tlabelsMonths.push(getMonthName(i));\n\t\t\t\tTotalForMonths.push(0);\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\treturn [labelsMonths, TotalForMonths];\n\t}\n\n\tconst [dataChart, setDataChart] = useState({\n\t\tlabels: labels\n\t\t\t? getAllDataMonths()[0]\n\t\t\t: getDataBy(getUniqueList(data, \"category\"), \"category\"),\n\t\tdatasets: [\n\t\t\t{\n\t\t\t\tlabel: \"Most spending categories\",\n\t\t\t\tdata: labels\n\t\t\t\t\t? getAllDataMonths()[1]\n\t\t\t\t\t: getDataBy(getUniqueList(data, \"spends\"), \"spends\"),\n\t\t\t\tbackgroundColor: CHART_COLORS,\n\t\t\t},\n\t\t],\n\t});\n\n\tuseEffect(() => {\n\t\tsetDataChart({\n\t\t\tlabels: labels\n\t\t\t\t? getAllDataMonths()[0]\n\t\t\t\t: getDataBy(getUniqueList(data, \"category\"), \"category\"),\n\t\t\tdatasets: [\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Expenses of each month\",\n\t\t\t\t\tdata: labels\n\t\t\t\t\t\t? getAllDataMonths()[1]\n\t\t\t\t\t\t: getDataBy(getUniqueList(data, \"spends\"), \"spends\"),\n\n\t\t\t\t\tbackgroundColor: CHART_COLORS,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}, [expenses]);\n\n\tfunction getDataBy(arr, key) {\n\t\treturn arr.map((item) => item[key]);\n\t}\n\tfunction getUniqueList(arr, key) {\n\t\treturn [...new Map(arr.map((item) => [item[key], item])).values()];\n\t}\n\tfunction getMonthName(monthNumber) {\n\t\tconst date = new Date();\n\t\tdate.setMonth(monthNumber - 1);\n\n\t\treturn date.toLocaleString(\"en-US\", { month: \"short\" });\n\t}\n\treturn (\n\t\t<div className=\"chart flex-1\">\n\t\t\t<h1 className={H1 + \" mb-3\"}>{title}</h1>\n\t\t\t<div\n\t\t\t\tclassName={`${!labels && \"canvasChart\"} mx-auto`}\n\t\t\t\tstyle={{ width: width }}\n\t\t\t>\n\t\t\t\t{type === \"Doughnut\" ? (\n\t\t\t\t\t<Doughnut\n\t\t\t\t\t\tdata={dataChart}\n\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\tresponsive: true,\n\t\t\t\t\t\t\tmaintainAspectRatio: true,\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\t<Bar\n\t\t\t\t\t\tdata={dataChart}\n\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\tresponsive: true,\n\t\t\t\t\t\t\tmaintainAspectRatio: true,\n\t\t\t\t\t\t\tscales: {\n\t\t\t\t\t\t\t\ty: {\n\t\t\t\t\t\t\t\t\tbeginAtZero: true,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}